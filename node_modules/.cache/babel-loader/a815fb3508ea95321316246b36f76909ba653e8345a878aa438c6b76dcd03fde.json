{"ast":null,"code":"import'./App.css';import NavBar from'./components/NavBar';import Textform from'./components/Textform';import About from'./components/About';import{useState}from'react';import Alert from'./components/Alert';// import { BrowserRouter as Router,Routes,Route} from 'react-router-dom'\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setmode]=useState('light');const[alert,setalert]=useState(null);const showalert=(message,type)=>{setalert({msg:message,type:type});setTimeout(()=>{setalert(null);},2000);};const changemode=()=>{if(mode==='dark'){setmode('light');document.body.style.backgroundColor='white';document.body.style.color='black';showalert(\"Enabled light mode\",\"success\");document.title=\"TextUtils-LightMode\";}else{setmode('dark');document.body.style.backgroundColor='#1e0924';document.body.style.color='white';showalert(\"Enabled dark mode\",\"success\");document.title=\"TextUtils-DarkMode\";}};const changemode2=()=>{if(mode==='blue'){setmode('light');document.body.style.backgroundColor='white';document.body.style.color='black';showalert(\"Enabled light mode\",\"success\");}else{setmode('blue');document.body.style.backgroundColor='blue';document.body.style.color='black';showalert(\"Enabled blue mode\",\"success\");}};return/*#__PURE__*/ (// <Router>\n//   <div>\n//     <NavBar title=\"TextUtils\" about=\"About\" mode={mode} changemode2={changemode2} changemode = {changemode}/>\n//     <Alert alert={alert}/>\n//     <br/>\n//     <Routes>\n//         {/* <Route path=\"/about\">\n//           <About />   \n//         </Route>\n//         <Route  path=\"/\">\n//           <Textform mode={mode} showalert={showalert}/>\n//         </Route> */}\n//       <Route exact path=\"/\" element={<Textform mode={mode} showalert={showalert}/>} />\n//       <Route path=\"/about\" element={<About mode={mode}/>} />\n//     </Routes>       \n//   </div>  \n// </Router>\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{title:\"TextUtils\",about:\"About\",mode:mode,changemode2:changemode2,changemode:changemode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Textform,{mode:mode,showalert:showalert})]}));}export default App;","map":{"version":3,"names":["NavBar","Textform","About","useState","Alert","jsx","_jsx","jsxs","_jsxs","App","mode","setmode","alert","setalert","showalert","message","type","msg","setTimeout","changemode","document","body","style","backgroundColor","color","title","changemode2","children","about"],"sources":["/home/prasanthi/Desktop/react_cwh/TextUtil/src/App.js"],"sourcesContent":["import './App.css'\nimport NavBar from './components/NavBar'\nimport Textform from './components/Textform'\nimport About from './components/About'\nimport { useState } from 'react'\nimport Alert from './components/Alert'\n// import { BrowserRouter as Router,Routes,Route} from 'react-router-dom'\nfunction App()\n{\n\n  const [mode,setmode] = useState('light');\n  const [alert,setalert] = useState(null);\n\n  const showalert = (message,type) =>\n  {\n      setalert({\n        msg:message,\n        type:type\n      })\n\n      setTimeout(()=>{\n        setalert(null);\n      },2000)\n  }\n  const changemode = () =>{\n    if(mode === 'dark')\n    {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showalert(\"Enabled light mode\",\"success\");\n      document.title=\"TextUtils-LightMode\";\n    }\n    else\n    {\n      setmode('dark');\n      document.body.style.backgroundColor = '#1e0924';\n      document.body.style.color = 'white';\n      showalert(\"Enabled dark mode\",\"success\");\n      document.title=\"TextUtils-DarkMode\";\n    }\n  }\n\n  const changemode2 = () =>{\n    if(mode === 'blue')\n    {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showalert(\"Enabled light mode\",\"success\");\n    }\n    else\n    {\n      setmode('blue');\n      document.body.style.backgroundColor = 'blue';\n      document.body.style.color = 'black';\n      showalert(\"Enabled blue mode\",\"success\");\n    }\n  }\n\n  return(\n    // <Router>\n    //   <div>\n    //     <NavBar title=\"TextUtils\" about=\"About\" mode={mode} changemode2={changemode2} changemode = {changemode}/>\n    //     <Alert alert={alert}/>\n    //     <br/>\n        \n    //     <Routes>\n    //         {/* <Route path=\"/about\">\n    //           <About />   \n    //         </Route>\n    //         <Route  path=\"/\">\n    //           <Textform mode={mode} showalert={showalert}/>\n    //         </Route> */}\n    //       <Route exact path=\"/\" element={<Textform mode={mode} showalert={showalert}/>} />\n    //       <Route path=\"/about\" element={<About mode={mode}/>} />\n    //     </Routes>       \n    //   </div>  \n    // </Router>\n    <div>\n    <NavBar title=\"TextUtils\" about=\"About\" mode={mode} changemode2={changemode2} changemode = {changemode}/>\n     <Alert alert={alert}/>\n        <br/>\n         <Textform mode={mode} showalert={showalert}/>\n   </div>\n  );\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}